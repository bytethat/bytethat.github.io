@use "rfs/scss";
@use "variables";

*,
*::before,
*::after {
  margin: 0; 
  padding: 0; 
  outline: 0;
  border: 0 none;
  box-sizing: border-box;
}


// Root
//
// Ability to the value of the root font sizes, affecting the value of `rem`.
// null by default, thus nothing is generated.

:root {
    @include scss.font-size(var(--#{variables.$prefix}default-font-size));
}

body { 
  // color: var(--#{$prefix}default-font-color);
  color: rgba(var(--#{variables.$prefix}default-font-color-rgb), 1);
  font-family: var(--#{variables.$prefix}default-font-family);
  @include scss.font-size(var(--#{variables.$prefix}default-font-size));
  font-weight: var(--#{variables.$prefix}default-font-weight);
  line-height: var(--#{variables.$prefix}default-line-height);
  z-index: 0;
}


// Typography
//
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.

%heading {
  margin-top: 0;
  margin-bottom: #{variables.$headings-margin-bottom}rem;
  font-family: variables.$headings-font-family;
  font-style: variables.$headings-font-style;
  font-weight: variables.$headings-font-weight;
  line-height: variables.$headings-line-height;
  color: var(--#{variables.$prefix}heading-color);
}

h1 {
  @extend %heading;
  @include scss.font-size(variables.$h1-font-size);
}

h2 {
  @extend %heading;
  @include scss.font-size(variables.$h2-font-size);
}

h3 {
  @extend %heading;
  @include scss.font-size(variables.$h3-font-size);
}

h4 {
  @extend %heading;
  @include scss.font-size(variables.$h4-font-size);
}

h5 {
  @extend %heading;
  @include scss.font-size(variables.$h5-font-size);
}

h6 {
  @extend %heading;
  @include scss.font-size(variables.$h6-font-size);
}

p {
  margin-top: 0;
  margin-bottom: 0.5rem;
}


// Lists
ol, ul, dl, dt, dd { margin-top: 0; margin-bottom: 0; padding-left: 0; }

// Blockquote

blockquote {
  margin: 0 0 1rem;
}


// Strong
//
// Add the correct font weight in Chrome, Edge, and Safari

b,
strong {
  font-weight: #{variables.$font-weight-semibold};
}


// Links

a {
  color: rgba(var(--#{variables.$prefix}link-color-rgb), var(--#{variables.$prefix}link-opacity, 1));
  text-decoration: variables.$link-decoration;

  &:hover {
    --#{variables.$prefix}link-color-rgb: var(--#{variables.$prefix}link-hover-color-rgb);
    text-decoration: variables.$link-hover-decoration;
  }
}

// Figures
//
// Apply a consistent margin strategy (matches our type styles).

figure {
  margin: 0;
}


// Images and content

img,
svg {
  vertical-align: middle;
}


// Tables
//
// Prevent double borders

table {
  caption-side: bottom;
  border-collapse: collapse;
}

// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.

[hidden] {
  display: none !important;
}

button, input, optgroup, select, textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

textarea {
  resize: vertical;
}
// Button

button {
  background: none;
  color: inherit;
  cursor: pointer;
  font: inherit;
  overflow: visible;
  padding: 0;
  -webkit-user-select: none; // for button, input, select, textarea
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;

  &:disabled {
    cursor: default;
  }
}