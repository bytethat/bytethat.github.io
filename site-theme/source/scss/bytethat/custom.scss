@use "bootstrap/scss/functions";
@use "../mixins";
@use "../variables";

@use "sass:map";

.services {
  --#{variables.$prefix}default-font-color: #{variables.$font-color};
  --#{variables.$prefix}default-font-color-rgb: #{functions.to-rgb(variables.$font-color)};

  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 1rem;
  margin: 1rem 0;
  color: rgba(var(--#{variables.$prefix}default-font-color-rgb), 1);

  @media (min-width: map.get(variables.$grid-breakpoints, md)) {
    flex-direction: row;
  }

  .service {
    background-color: #{variables.$light};
    border-bottom: 0.25em solid variables.$red;

    @media (min-width: map.get(variables.$grid-breakpoints, md)) {
      flex: 1 1 calc(50% - 1rem);
    }

    @media (min-width: map.get(variables.$grid-breakpoints, xl)) {
      flex: 1 1 calc(25% - 1rem);
    }

    .card-body {
      display: flex;

      > p {
        margin: auto 0 0 0;
      }
    }
  }
}

.services-lg {
  .service {
    display: flex;
    flex-direction: column;

    .image {
      flex: 1;

      img {
        display: inline-block;
        width: 100%;
        aspect-ratio: 16/10;
        margin: 0 auto;
      }
    }

    .body {
      flex: 1;
      margin: auto;
      text-align: center;

      .content {
        padding: 1rem;
      }
    }
  }

  @media (min-width: map.get(variables.$grid-breakpoints, md)) {
    .service {
      flex-direction: row;

      &.even { flex-direction: row-reverse;}
    }
  }

}

.projects {
  --foo: var(--#{variables.$prefix}container-xxl-breakpoint);

  display: grid;
  // grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-template-columns: 100%;
  gap: 0.5em;
  margin: 1rem 0;

  @media (min-width: map.get(variables.$grid-breakpoints, md)) {
    grid-template-columns: 50% 50%;
  }

  @media (min-width: map.get(variables.$grid-breakpoints, xxl)) {
    grid-template-columns: repeat(3, 1fr);
  }

  .project {
    --#{variables.$prefix}card-spacer-x: 1rem;
    --#{variables.$prefix}card-spacer-y: 1rem;

    --#{variables.$prefix}card-border-width: 0;

    transition: all 0.3s ease;

    .card-image {
      img {
        width: 100%;
        aspect-ratio: 16/10;
      }
    }

    .card-body {
      --#{variables.$prefix}default-font-color: #ffffff;
      --#{variables.$prefix}default-font-color-rgb: 255, 255, 255;

      --#{variables.$prefix}link-color: #{variables.$gray-200};
      --#{variables.$prefix}link-color-rgb: #{functions.to-rgb(variables.$gray-200)};
      --#{variables.$prefix}link-hover-color: #{variables.$gray-500};
      --#{variables.$prefix}link-hover-color-rgb: #{functions.to-rgb(variables.$gray-500)};

      position: absolute;
      bottom: 0;
      z-index: 1;

      color: var(--#{variables.$prefix}default-font-color);
      @include mixins.text-outline(rgba(variables.$black, 0.3));
    }

    &:hover {
      .card-body {
        text-decoration: underline;
      }
    }
  }
}

.swiper {
  --swiper-theme-color: #{variables.$primary};
  --swiper-navigation-size: 2rem;
  --swiper-pagination-bullet-width: 2rem;
  --swiper-pagination-bullet-height: 0.125rem;
  --swiper-pagination-bullet-border-radius: 0;

  .swiper-button-prev, .swiper-button-next {
    font-size: 1.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  @media (min-width: map.get(variables.$grid-breakpoints, md)) {
    .swiper-button-prev, .swiper-button-next {
      opacity: 1;
    }
  }
}

.main-slider {
  position: relative;
  height: calc(100vh - 4em); // fallback for browsers that do not support svh
  height: calc(100svh - 4em);

  .slide-image {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;

    picture {
      display: block;
      width: 100%;
      height: 100%;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
      }
    }
  }

  .slide-content {
    --#{variables.$prefix}default-font-color: #ffffff;
    --#{variables.$prefix}default-font-color-rgb: 255, 255, 255;

    --#{variables.$prefix}link-color: #{variables.$gray-200};
    --#{variables.$prefix}link-color-rgb: #{functions.to-rgb(variables.$gray-200)};
    --#{variables.$prefix}link-hover-color: #{variables.$gray-500};
    --#{variables.$prefix}link-hover-color-rgb: #{functions.to-rgb(variables.$gray-500)};

    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    padding: 4em;
    justify-content: flex-end;
    flex-direction: column;
    z-index: 1;

    color: var(--#{variables.$prefix}default-font-color);
    @include mixins.text-outline(rgba(variables.$black, 0.3));
  }
}

.testimonials {
  --#{variables.$prefix}default-font-color: #{variables.$font-color};
  --#{variables.$prefix}default-font-color-rgb: #{functions.to-rgb(variables.$font-color)};

  --#{variables.$prefix}testimonial-bg: #{variables.$light};
  --#{variables.$prefix}testimonial-border: rgba(var(--#{variables.$prefix}default-font-color-rgb), .1);
  --#{variables.$prefix}testimonial-radius: 1rem;
  --#{variables.$prefix}testimonial-logo-size: 3rem; // control logo size here
  --#{variables.$prefix}testimonial-text-color: var(--#{variables.$prefix}default-font-color);
  --#{variables.$prefix}testimonial-accent: #{variables.$primary};
  display: grid;
  gap: 4rem;
  margin: 1rem 0;
  color: rgba(var(--#{variables.$prefix}default-font-color-rgb), 1);

  @media (min-width: map.get(variables.$grid-breakpoints, lg)) {
    grid-template-columns: calc(50% - 2rem) calc(50% - 2rem);
  }

  .testimonial {
    flex-direction: column;

    // gap: 1.25rem;
    padding: 2rem 2rem 2.25rem;
    background: var(--#{variables.$prefix}testimonial-bg);
    border: 1px solid var(--#{variables.$prefix}testimonial-border);
    border-radius: var(--#{variables.$prefix}testimonial-radius);
    box-shadow: 0 4px 8px rgba(0, 0, 0, .04), 0 2px 4px rgba(0, 0, 0, .06);
    isolation: isolate;
    transition: box-shadow .25s ease, transform .25s ease;

    margin: 0 auto;

    @media (min-width: map.get(variables.$grid-breakpoints, sm)) {
      flex-direction: row;
    }

    .card-image {
      max-width: 10rem;

      img {
        width: 100%;
        aspect-ratio: 16/9;
        object-fit: contain;
      }
    }

    // Main testimonial text emphasized: bigger, readable line-height
    .quote {
      position: relative;
      margin: 0;
      font-size: clamp(1.05rem, 1rem + 0.6vw, 1.4rem); // larger text
      line-height: 1.55;
      font-weight: #{variables.$font-weight-light};
      color: var(--#{variables.$prefix}testimonial-text-color);
      font-style: italic;

      &:before, &:after {
        font-size: 2.5rem;
        line-height: 0;
        font-weight: #{variables.$font-weight-semibold};
        font-style: normal;
        color: var(--#{variables.$prefix}testimonial-accent);
        opacity: .15;
      }

      &:before {
        content: '“';
        position: absolute;
        top: -.75rem;
        left: -.5rem;
      }

      &:after {
        content: '”';
        position: absolute;
        bottom: -.5rem;
        right: -.25rem;
      }
    }

    .author {
      flex: 1;
      justify-content: flex-end;

      display: flex;
      flex-direction: column;
      line-height: 1.2;

      .role {
        opacity: .7;
        font-size: .8rem;
      }

      .name {
        font-weight: #{variables.$font-weight-semibold};
        line-height: 1.2;
        color: var(--#{variables.$prefix}testimonial-accent);
      }
    }
  }
}
